openapi: 3.0.2
info:
    title: Games-api
    version: 1.0.0
    description: A brand new API with no content.  Go nuts!
paths:
    /games:
        get:
            tags:
                - games
            responses:
                '200':
                    $ref: '#/components/responses/200'
            summary: Get a list of games
            description: |
                Returns a list of games in API
        post:
            requestBody:
                description: A new game to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-game'
                required: true
            tags:
                - new-game
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/new-game'
                    description: Created a new game
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                One or all params are missing:
                                    value:
                                        error: One or all params are missing
                    description: One or all params are missing
            operationId: 'name, price'
            summary: Creates a game
            description: Creates a new game
    '/games/{id}':
        get:
            tags:
                - details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a given game:
                                    value: |-
                                        {id: 1, name: "Witcher 3", price: 29.99},
                                            {id: 2, name: "Cyberpunk 2077", price: 59.99},
                                            {id: 3, name: "Minecraft", price: 26.99},
                                            {id: 4, name: "CSGO", price: 0},
                                            {id: 4, name: "Roblox", price: 0},
                                            {id: 4, name: "GTA V", price: 29.99},
                                            {id: 4, name: "Valorant", price: 0},
                                            {id: 4, name: "WoW", price: 11.99},
                    description: |
                        Return full details of a given id game
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                ' Game /id+ was not found':
                                    value: |-
                                        {
                                            "error": "Game \\\id+ was not found in game array"
                                        }
                    description: Game was not found in games array
            operationId: id
            summary: Get full details of a game
            description: |
                Return full details of a given id game
        delete:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/delete-game'
                required: true
            tags:
                - delete-game
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/delete-game'
                            examples:
                                No content:
                                    value:
                                        id: No content
                    description: Game Deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                There is no game with this id:
                                    value:
                                        error: There is no game with this id.
                    description: |
                        There is no game with this id
            operationId: id
            summary: Delete game
            description: Delete game y id
        parameters:
            -
                name: id
                description: Write id for a game
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        new-game:
            title: Root Type for new-game
            description: ''
            required:
                - price
                - name
            type: object
            properties:
                name:
                    type: string
                price:
                    format: float
                    type: number
            example:
                name: Tetris
                price: 0.99
        delete-game:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
    responses:
        '200':
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            type: string
                    examples:
                        List of games:
                            value:
                                - Witcher 3
                                - Cyberpunk 2077
                                - World of Warcraft
            description: Returns a list of games
